Database for Python Quiz App
(MySQL Syntax)

-- Step 1: Create the database
CREATE DATABASE project;


-- Step 2: Use the created database
USE project;


-- Step 3: Create the "register" table
CREATE TABLE register (
    name VARCHAR(30),
    phone INT PRIMARY KEY,
    email VARCHAR(30),
    password VARCHAR(10)
);


--Step 4: Create the "java_questions" table and insert values
CREATE TABLE java_questions (
    id INT PRIMARY KEY,
    ques TEXT NOT NULL,
    op1 TEXT NOT NULL,
    op2 TEXT NOT NULL,
    op3 TEXT NOT NULL,
    op4 TEXT NOT NULL,
    ans INT NOT NULL
);

-- Insert the values
INSERT INTO java_questions (id, ques, op1, op2, op3, op4, ans) VALUES
(1, 'What is the difference between "==" and ".equals()" method in Java when comparing objects?', '"==" compares memory addresses, while ".equals()" compares the actual content.', '"==" compares the actual content, while ".equals()" compares memory addresses.', 'Both == and .equals() compare memory addresses.', 'Both == and .equals() compare the actual content.', 1),
(2, 'What is the Java keyword used to inherit a class?', 'extends', 'inherit', 'implements', 'inherits', 1),
(3, 'Which of the following data types in Java is NOT a primitive type?', 'int', 'float', 'double', 'String', 4),
(4, 'What is the access level of a default modifier in Java?', 'Public', 'Protected', 'Private', 'Package-private', 4),
(5, 'String str = "hello"; str.toUpperCase(); System.out.println(str);', 'hello', 'HELLO', 'It will cause a compilation error.', 'It will throw a runtime exception.', 1),
(6, 'What is the purpose of the "finally" block in Java exception handling?', 'It is used to catch exceptions.', 'It is used to handle exceptions.', 'It is used to define code that always executes, regardless of whether an exception is thrown or not.', 'It is used to re-throw exceptions.', 3),
(7, 'Which collection class in Java provides an ordered collection that does not allow duplicate elements?', 'ArrayList', 'TreeMap', 'LinkedList', 'HashSet', 2),
(8, 'What is the difference between ArrayList and LinkedList in Java?', 'ArrayList is implemented as a linked list, while LinkedList is implemented as an array.', 'ArrayList allows random access of elements using indexes, while LinkedList does not.', 'ArrayList is faster for adding and removing elements, while LinkedList is faster for accessing elements.', 'ArrayList uses more memory than LinkedList.', 3),
(9, 'What is the keyword used to handle exceptions in Java?', 'try', 'catch', 'throw', 'throws', 2),
(10, 'Which of the following statements is true about Java interfaces?', 'An interface can have method implementations.', 'A class can implement multiple interfaces.', 'An interface can extend multiple interfaces.', 'An interface can have constructors.', 2),
(11, 'What is the difference between HashMap and HashTable in Java?', 'HashMap is synchronized, while HashTable is not synchronized.', 'HashMap allows null keys and null values, while HashTable does not allow null keys or null values.', 'HashMap guarantees the order of elements, while HashTable does not guarantee the order.', 'HashMap is slower than HashTable for lookups and insertions.', 2),
(12, 'What is the purpose of the "super" keyword in Java?', 'To call the superclass constructor.', 'To access superclass methods and variables.', 'To override superclass methods.', 'To create a new instance of a superclass.', 2),
(13, 'String str1 = "hello"; String str2 = "hello"; System.out.println(str1 == str2);', 'true', 'false', 'It will cause a compilation error.', 'It will throw a runtime exception.', 1),
(14, 'What is the purpose of the "volatile" keyword in Java?', 'To specify that a variable cannot be changed after initialization.', 'To prevent the variable from being accessed by multiple threads simultaneously.', 'To ensure that changes made by one thread are visible to other threads.', 'To mark a variable as constant.', 3),
(15, 'What is the purpose of the "instanceof" operator in Java?', 'To check if an object is of a specific type.', 'To cast an object to a different type.', 'To create a new instance of a class.', 'To compare two objects for equality.', 1),
(16, 'What is the purpose of the "default" keyword in Java switch statements?', 'To specify a default case that will be executed if no other case matches.', 'To indicate the end of the switch statement.', 'To specify a case that will always be executed first.', 'To handle exceptions within the switch statement.', 1),
(17, 'What is a constructor in Java?', 'A special method used to initialize objects.', 'A method used to destroy objects.', 'A method used to compare objects.', 'A method used to access static variables.', 1),
(18, 'What is method overloading in Java?', 'Defining a method within another method.', 'Redefining a method in a subclass.', 'Defining multiple methods with the same name but different parameters.', 'Defining a method with a different return type.', 3),
(19, 'What is the purpose of the "static" keyword in Java?', 'To declare a constant.', 'To specify that a method belongs to the class rather than an instance.', 'To prevent inheritance.', 'To define an abstract method.', 2),
(20, 'int x = 5; System.out.println(x++);', '5', '6', 'Compilation error', 'Runtime error', 1),
(21, 'What is the purpose of the "this" keyword in Java?', 'To access static methods.', 'To define a subclass.', 'To handle exceptions.', 'To refer to the current class instance.', 4),
(22, 'What is the purpose of the "break" statement in Java?', 'To exit a loop or switch statement.', 'To start a new loop iteration.', 'To return a value from a method.', 'To handle exceptions.', 1),
(23, 'What is method overriding in Java?', 'Redefining a static method in a subclass.', 'Defining multiple methods with the same name but different parameters.', 'Redefining a method in a subclass with the same signature as in the superclass.', 'Defining a method with the same name and return type in a subclass.', 3),
(24, 'What is the purpose of the "finalize()" method in Java?', 'To automatically free up memory when an object is no longer referenced.', 'To clean up system resources before an object is garbage collected.', 'To mark a class as immutable.', 'To prevent a class from being subclassed.', 2),
(25, 'What is the difference between a HashSet and a TreeSet in Java?', 'HashSet guarantees the order of elements, while TreeSet does not guarantee the order.', 'HashSet uses a binary tree to store elements, while TreeSet uses a hash table.', 'HashSet allows duplicate elements, while TreeSet does not allow duplicate elements.', 'HashSet provides constant-time performance for basic operations, while TreeSet provides log(n) time performance.', 4),
(26, 'String str = "apple"; str = str.substring(1, 4); System.out.println(str);', 'Removes the first character from the string.', 'Removes the last character from the string.', 'Extracts a substring from index 1 to 4 (exclusive).', 'Reverses the string.', 3),
(27, 'int x = 5; int y = (x > 3) ? 10 : 20; System.out.println(y);', '5', '10', '20', 'Compilation Error', 2),
(28, 'int[] arr = {1, 2, 3, 4, 5}; System.out.println(arr[3]);', '1', '2', '3', '4', 4),
(29, 'What is the purpose of the "try-with-resources" statement in Java?', 'To ensure that a block of code is executed only if a specified condition is true.', 'To catch and handle exceptions that occur within a block of code.', 'To automatically close resources such as files, streams, or sockets when they are no longer needed.', 'To define a block of code that can be executed in case an exception occurs.', 3),
(30, 'What is the purpose of the "extends" keyword in Java?', 'To implement an interface.', 'To define a superclass.', 'To define a subclass.', 'To import a package.', 3);


--Step 5: Create the "c_questions" table and insert values
CREATE TABLE c_questions (
    id INT PRIMARY KEY,
    ques TEXT NOT NULL,
    op1 TEXT NOT NULL,
    op2 TEXT NOT NULL,
    op3 TEXT NOT NULL,
    op4 TEXT NOT NULL,
    ans INT NOT NULL
);

-- Insert the values
INSERT INTO c_questions (id, ques, op1, op2, op3, op4, ans) VALUES
(1, 'Which of the following is not a valid storage class in C/C++?', 'auto', 'register', 'heap', 'static', 3),
(2, 'int arr[5] = {1, 2, 3, 4, 5};  printf("%d", *(arr + 2));', '2', '3', '4', '5', 2),
(3, 'int a = 4;  int b = square(a + 1);  printf("%d", b);', '20', '25', '24', 'Compilation Error', 3),
(4, 'Which of the following is a correct way to dynamically allocate memory in C/C++?', 'int *ptr = (int *)malloc(sizeof(int));', 'int *ptr = new int();', 'Both a and b', 'None of the above', 3),
(5, 'Which of the following statements about function overloading in C++ is false?', 'Functions must have the same name but different parameter lists.', 'Functions can have different return types.', 'Functions can have different access specifiers.', 'Functions can have a different number of parameters.', 2),
(6, 'int x = 5;  printf("%d", x+++x);', '10', '11', '12', 'Compilation Error', 4),
(7, 'int arr[5] = {1, 2, 3, 4, 5};  printf("%d", arr[5]);', '5', '4', 'Garbage Value', 'Compilation Error', 3),
(8, 'Which of the following is the correct way to declare a constant pointer in C/C++?', 'int * const ptr;', 'const int *ptr;', 'const int * const ptr;', 'Both a and c', 4),
(9, 'What does the following declaration signify in C/C++?  int **ptr;', 'ptr is a pointer to an integer.', 'ptr is a pointer to a pointer to an integer.', 'ptr is a pointer to a pointer.', 'ptr is a pointer to a double.', 2),
(10, 'Which of the following correctly allocates memory for a 2D array using double pointers in C/C++?', 'int **arr = new int[5][5];', 'int **arr = (int **)malloc(5 * sizeof(int *));', 'int (*arr)[5] = new int[5][5];', 'int *arr = new int[5];', 4),
(11, 'int x = 5;  int *ptr1 = &x;  int **ptr2 = &ptr1;  **ptr2 = 10;  printf("%d", x);', '5', '10', 'Compilation Error', 'Undefined behavior', 2),
(12, 'Which of the following operators is used to access the value pointed to by a pointer in C/C++?', '*', '&', '#', '->', 1),
(13, 'What does the following declaration signify in C/C++?  int (*ptr)[10];', 'ptr is a pointer to an integer array of size 10.', 'ptr is an array of pointers to integers.', 'ptr is a pointer to a function returning an integer.', 'ptr is a pointer to an array of 10 integers.', 4),
(14, 'In C/C++, which keyword is used to dynamically allocate memory for arrays?', 'malloc', 'calloc', 'realloc', 'new', 2),
(15, 'What is the purpose of the "static" keyword in C/C++?', 'It is used to declare a variable with dynamic storage duration.', 'It is used to declare a variable with internal linkage.', 'It is used to allocate memory dynamically.', 'It is used to define a class in C++.', 2),
(16, 'Which of the following is true about the "sizeof" operator in C/C++?', 'It returns the size of a variable in bits.', 'It returns the size of a variable in bytes.', 'It returns the address of a variable.', 'It returns the value of a variable.', 2),
(17, 'In C/C++, what does the "inline" keyword do when used before a function?', 'It specifies that the function should be defined in the same file.', 'It specifies that the function should be inlined by the compiler.', 'It specifies that the function should be declared but not defined.', 'It specifies that the function should be called indirectly.', 2),
(18, 'What does the term "polymorphism" refer to in the context of object-oriented programming (OOP)?', 'The ability of a class to inherit properties and behavior from another class.', 'The process of converting objects of one class into objects of another class.', 'The ability of a function to perform different tasks based on the object that it is acting upon.', 'The process of hiding the implementation details of a class and only exposing the necessary interfaces.', 3),
(19, 'In C++, what is the difference between "new" and "malloc()" when allocating memory?', '"new" is used for allocating memory for primitive data types, whereas "malloc()" is used for objects.', '"new" invokes constructors for objects after allocating memory, whereas "malloc()" does not.', '"new" always returns a pointer to the allocated memory, whereas "malloc()" may return NULL if allocation fails.', 'There is no difference; both "new" and "malloc()" serve the same purpose.', 2),
(20, 'What does the acronym "RAII" stand for in C++ programming?', 'Resource Acquisition Is Insufficient', 'Resource Allocation Is Inferior', 'Resource Acquisition Is Initialization', 'Resource Allocation Is Immediate', 3),
(21, 'In C, what does the "const" qualifier indicate when used before a variable declaration?', 'It indicates that the variable cannot be modified.', 'It indicates that the variable can be modified only within the same function.', 'It indicates that the variable\'s value will be determined at runtime.', 'It indicates that the variable\'s value is constant across all instances of the program.', 1),
(22, 'In C++, what is the primary purpose of a constructor?', 'To destruct an object when it goes out of scope.', 'To allocate memory for an object.', 'To initialize an object\'s data members.', 'To perform operations on an object\'s data members.', 3),
(23, 'Which of the following statements regarding method overloading in C++ is true?', 'Method overloading allows a subclass to redefine a method of its superclass.', 'Method overloading is the process of creating multiple methods with the same name but different parameter lists.', 'Method overloading allows a method to be called on an object of a different class.', 'Method overloading allows a method to have a different return type in the same class.', 2),
(24, 'What is method overriding in C++?', 'Method overriding allows a method to have different names in different classes.', 'Method overriding allows a method to have different return types in the same class.', 'Method overriding allows a subclass to define a method with a different signature than its superclass.', 'Method overriding allows a subclass to redefine a method of its superclass with the same signature.', 4),
(25, 'In C++, what is the purpose of a destructor?', 'To allocate memory for an object.', 'To initialize an object\'s data members.', 'To destroy an object and free its allocated memory.', 'To perform operations on an object\'s data members.', 3),
(26, 'Which of the following is NOT a standard C++ library?', 'iostream', 'string', 'math', 'inputoutput', 4),
(27, 'Which of the following statements about libraries in C++ is true?', 'Libraries are collections of classes and functions that can be reused in different programs.', 'Libraries are used only for input/output operations.', 'Libraries are automatically included in every C++ program.', 'Libraries cannot contain user-defined functions.', 1),
(28, 'In C++, what is the purpose of the "#include" directive?', 'To define a new function.', 'To include a header file in the program.', 'To declare a global variable.', 'To declare a namespace.', 2),
(29, 'What happens if a class in C++ does not explicitly define a constructor?', 'The compiler generates a default constructor automatically.', 'The class cannot be instantiated.', 'The class can only have static methods.', 'The class cannot be inherited by other classes.', 1),
(30, 'Which of the following best describes method overloading in C++?', 'Method overloading allows methods to have the same name but different return types in the same class.', 'Method overloading allows methods to have different names but the same parameter list in the same class.', 'Method overloading allows methods to have the same name but different parameter lists in the same class.', 'Method overloading allows methods to have different names and different parameter lists in the same class.', 3);


--Step 6: Create the "py_questions" table and insert values
CREATE TABLE py_questions (
    id INT PRIMARY KEY,
    ques TEXT NOT NULL,
    op1 TEXT NOT NULL,
    op2 TEXT NOT NULL,
    op3 TEXT NOT NULL,
    op4 TEXT NOT NULL,
    ans INT NOT NULL
);

-- Insert the values
INSERT INTO py_questions (id, ques, op1, op2, op3, op4, ans) VALUES
(1, 'Which of the following statements is true about Python?', 'Python is a compiled language.', 'Python code must be explicitly compiled before execution.', 'Python is both interpreted and compiled.', 'Python code is executed line by line without compilation.', 3),
(2, 'What does the "lambda" keyword do in Python?', 'Defines a new class', 'Declares a variable.', 'Defines a generator function.', 'Creates an anonymous function.', 4),
(3, 'Which of the following statements is true about Python lists?', 'Lists cannot contain items of different data types.', 'Lists are immutable.', 'Lists are ordered collections.', 'Lists can only store numeric values.', 3),
(4, 'What does the "self" keyword represent in Python class methods?', 'It refers to the superclass of the current class.', 'It is a keyword used for exception handling.', 'It refers to the current instance of the class.', 'It is used to call static methods within the class.', 3),
(5, 'x=5  y=2  print(x ** y)', '25', '10', '7', '32', 4),
(6, 'What does the len() function do in Python?', 'Converts a value to a string', 'Returns the length of a sequence', 'Checks if a value exists in a list', 'Raises an exception', 2),
(7, 'Which keyword is used for defining a function in Python?', 'def', 'function', 'define', 'func', 1),
(8, 'What will be the output of print(3 * "7") in Python?', '21', '777', '7*3', '3*7', 2),
(9, 'What data type is the result of 3 / 2 in Python?', 'int', 'float', 'str', 'bool', 2),
(10, 'What is the output of print("Hello" + "World") in Python?', 'HelloWorld', 'Hello World', 'Hello+World', 'Error', 1),
(11, 'How do you start a comment in Python?', '//', '--', '/**/', '#', 4),
(12, 'What is the correct way to create an empty list in Python?', 'list = []', 'list = {}', 'list = ()', 'list = ""', 1),
(13, 'Which function can be used to read user input in Python 3?', 'input()', 'raw_input()', 'read_input()', 'user_input()', 1),
(14, 'How do you check the length of a list named "my_list" in Python?', 'length(my_list)', 'my_list.size()', 'len(my_list)', 'size(my_list)', 3),
(15, 'Explain the purpose of Python "__init__" method in a class.', 'It is used to initialize the instance variables of the class.', 'It is used to define the class constructor.', 'It is automatically called when an instance of the class is created.', 'All of the above.', 4),
(16, 'What is a generator in Python?', 'A function returning values, pausing execution between each until the next one', 'A special type of list that can only contain numerical values.', 'A built-in function for creating random sequences of numbers.', 'A decorator used to mark certain functions as generators.', 1),
(17, 'What is the purpose of the "with" statement in Python?', 'It is used to manage resources within a block of code.', 'It is used to create a new file and write data to it.', 'It is used to handle exceptions in Python.', 'It is used to create a new thread of execution.', 1),
(18, 'What is the difference between == and is operators in Python?', '== checks for equality, while "is" compares their memory addresses.', '== checks for identity, while "is" checks for equality.', '== is used for assignment, while "is" is used for comparison.', 'There is no difference; they are used interchangeably.', 1),
(19, 'How can you achieve parallelism in Python?', 'Using the "multiprocessing" module', 'Using the "threading" module', 'Using the "concurrent.futures" module', 'All of the above', 4),
(20, 'What is a lambda function in Python?', 'A function that can accept a variable number of arguments', 'A function that is defined using the "def" keyword', 'A small anonymous function defined using the "lambda" keyword', 'A function that returns another function', 3),
(21, 'How can you handle errors in Python?', 'Using try-except blocks', 'Using the "assert" statement', 'Using the "finally" block', 'All of the above', 4),
(22, 'What is the purpose of the "__name__" variable in Python?', 'It stores the name of the current module as a string.', 'It is used to define the name of a class.', 'It is automatically set to the name of the script when it is executed.', 'It is used to access the name of the current function.', 3),
(23, 'What is the purpose of the "enumerate()" function in Python?', 'To iterate over a sequence while keeping track of the index.', 'To remove duplicate elements from a list.', 'To reverse the order of elements in a sequence.', 'To sort elements in a sequence in ascending order.', 1),
(24, 'numbers = [1, 2, 3, 4, 5]   squared = [x ** 2 for x in numbers if x % 2 == 0]   print(squared)', '[1, 4, 9, 16, 25]', '[4, 16]', '[1, 3, 5]', '[2, 4]', 2),
(25, 'What is the purpose of the "map()" function in Python?', 'To apply a function to each element of a sequence and return a list', 'To remove elements from a list based on a condition.', 'To concatenate multiple lists into a single list.', 'To reverse the order of elements in a sequence.', 1),
(26, 'What is the difference between a set and a frozenset in Python?', 'A set is immutable, while a frozenset is mutable.', 'A set can contain duplicate elements, while a frozenset cannot.', 'A frozenset is immutable, while a set is mutable.', 'A set is ordered, while a frozenset is unordered.', 3),
(27, 'What is the purpose of the "pass" statement in Python?', 'To exit a loop prematurely.', 'To indicate that nothing should happen.', 'To raise an exception.', 'To skip the current iteration of a loop.', 2),
(28, 'What does the "__str__()" method do in Python?', 'It converts an object to a string.', 'It converts a string to an object.', 'It returns the length of a string.', 'It reverses the characters of a string.', 1),
(29, 'What is the purpose of the "global" keyword in Python?', 'To declare a variable inside a function as global.', 'To declare a variable outside a function as global.', 'To import a module globally.', 'To define a global constant.', 1),
(30, 'def foo(x, y=[]):y.append(x)  return y     print(foo(1))  print(foo(2))  print(foo(3))', '[1] [2] [3]', '[1, 2, 3] [1, 2, 3] [1, 2, 3]', '[1] [1, 2] [1, 2, 3]', '[1] [1, 2] [1, 2]', 3),
(31, 'In which field Python language is used?', 'Data Visualization', 'Artificial Intelligence', 'Machine Learning', 'All of the above', 4);


--Step 7: Create the "result" table
CREATE TABLE result (
    name VARCHAR(30),
    phone INT PRIMARY KEY,
    test VARCHAR(10),
    marks INT
);


